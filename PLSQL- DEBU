UPDATE T_WRK_IMG_STK WRK
    SET (WRK.QTE_STK_ENTIER,        WRK.QTE_STK_DECIMALE,        WRK.COD_EAN_MER,        WRK.COD_EAN_GLD,        WRK.COD_EAN_TYPE,        WRK.COND_VTE,        WRK.DAT_DERNIERE_VTE,        WRK.COD_ITM_PRIO,        WRK.PDS_MOYEN,        WRK.PDS_VOLUME,        WRK.COD_UNT_MESURE,        WRK.PRX_REVIENT_ARTARIFA,        WRK.TYP_VTE,        WRK.DAT_DEB_TARIF,        WRK.PRIORITAIRE,        WRK.IND_EAN,        WRK.COD_NMCL,        WRK.DAT_MAJ
        )        =        ( SELECT INNER_RS_2.QTE_STK_ENTIER,                 INNER_RS_2.QTE_STK_DECIMALE,                 INNER_RS_2.COD_EAN_MER,                 INNER_RS_2.COD_EAN_GLD,                 INNER_RS_2.COD_EAN_TYPE,                 INNER_RS_2.COND_VTE,                 INNER_RS_2.DAT_DERNIERE_VTE,                 INNER_RS_2.COD_ITM_PRIO,                 INNER_RS_2.PDS_MOYEN,                 INNER_RS_2.PDS_VOLUME,                 INNER_RS_2.COD_UNT_MESURE,                 INNER_RS_2.PRX_REVIENT_ARTARIFA,                 INNER_RS_2.TYP_VTE,                 INNER_RS_2.DAT_DEB_TARIF,                 INNER_RS_2.PRIORITAIRE,                 INNER_RS_2.IND_EAN,                 INNER_RS_2.COD_NMCL,                 INNER_RS_2.DAT_MAJ         -- 1. chercher un EAN PRIORITAIRE [Les EAN se trouvant dans la table T_REF_MER_ARTSIGN et et respectant la jointure suivante : ARTEAN.COD_EAN = ARTSIGN.COD_EAN]                 FROM (                                     -- 2. Si un ean prio n'est pas trouver, on va chercher les EAN avec le COND_VTE = 1                       SELECT --INNER_RS.*,                   -- 3. Si un ean avec COD_CONDIT n'est pas trouver, on va chercher l'ean avec le conditonnement de vente la plus petite                              INNER_RS.QTE_STK_ENTIER,                              INNER_RS.QTE_STK_DECIMALE,                              INNER_RS.COD_PDV,                              INNER_RS.COD_CHRONO,                              INNER_RS.COD_EAN_MER,                              INNER_RS.COD_EAN_GLD,                              INNER_RS.COD_EAN_TYPE,                              INNER_RS.COND_VTE,                              INNER_RS.DAT_DERNIERE_VTE,                              INNER_RS.COD_ITM_PRIO,                              INNER_RS.PDS_MOYEN,                              INNER_RS.PDS_VOLUME,                              INNER_RS.COD_UNT_MESURE,                              INNER_RS.PRX_REVIENT_ARTARIFA,                              INNER_RS.TYP_VTE,                              INNER_RS.DAT_DEB_TARIF,                              INNER_RS.PRIORITAIRE,                              INNER_RS.IND_EAN,                              INNER_RS.COD_NMCL,                              INNER_RS.DAT_MAJ = RS.DAT_MAJ,                              ROW_NUMBER () OVER (PARTITION BY INNER_RS.COD_PDV, INNER_RS.COD_CHRONO ORDER BY INNER_RS.PRIORITAIRE DESC, INNER_RS.CONDITIONNEMENT_1 DESC, INNER_RS.COND_VTE ASC, INNER_RS.DAT_DERNIERE_VTE DESC NULLS LAST ) RN_EAN_FINAL
                         FROM (                                SELECT                                       WRK_STK.ID_EVT ID_EVT,                                       WRK_STK.DAT_MVT_STK DAT_MVT_STK,                                       WRK_STK.QTE_STK QTE_STK,                                       TRUNC(WRK_STK.QTE_STK) QTE_STK_ENTIER,                                       (ABS(WRK_STK.QTE_STK) - TRUNC(ABS(WRK_STK.QTE_STK))) QTE_STK_DECIMALE,                                       ARTEAN.COD_PDV COD_PDV,                                       ARTEAN.COD_CHRONO COD_CHRONO,                                       ARTEAN.COD_EAN_MER, -- Forcer sur 13 characteres le COD_EAN_MER                                       ARTEAN.COD_EAN_GLD,                                       ARTEAN.COD_EAN_TYPE COD_EAN_TYPE,                                       ARTEAN.COD_CONDIT COND_VTE,                                       ARTEAN.DAT_DERNIERE_VTE DAT_DERNIERE_VTE,                                       ARTSIGN.COD_ITM_PRIO COD_ITM_PRIO,                                       ARTSIGN.PDS_MOYEN PDS_MOYEN,                                       ARTSIGN.PDS_VOLUME PDS_VOLUME,                                       ARTSIGN.COD_UNT_MESURE COD_UNT_MESURE,                                       ARTARIFA.PRX_ACHT_NET PRX_REVIENT_ARTARIFA,                                       ARTSIGN.TYP_VTE TYP_VTE,                                       ARTARIFA.DAT_DEB_TARIF DAT_DEB_TARIF,                                       1 IND_EAN,  -- Determiner si c'est un EAN1 ou un EAN2                                       ARTSIGN.COD_NMCL COD_NMCL,                                       ARTARIFA.DAT_FIN_TARIF DAT_FIN_TARIF,                                       SYSDATE DAT_MAJ,                                       CASE WHEN ARTEAN.COD_EAN = ARTSIGN.COD_EAN THEN 1 ELSE 0 END PRIORITAIRE,                                       CASE WHEN ARTEAN.COD_CONDIT = 1 THEN 1 ELSE 0 END CONDITIONNEMENT_1,                                       ROW_NUMBER () OVER (PARTITION BY ARTEAN.COD_PDV, ARTEAN.COD_CHRONO, ARTEAN.COD_EAN ORDER BY ARTARIFA.DAT_DEB_TARIF DESC ) RN_PRIX
                                   FROM                                       T_WRK_IMG_STK WRK_STK,                                       T_REF_MER_ARTARIFA ARTARIFA,                                       T_REF_MER_ARTSIGN ARTSIGN,                                --(ARTEAN) -> Retournes Les donnees de la table T_REF_MER_ARTEAN apres avoir fait les manipulations suivantes:                                      (SELECT                                                        -- 1. Transformation COD_EAN_MER en COD_EAN_GOLD                                             INNER_RS_3.*                                            -- 2. Faire d'avantage de transformation sur les COD_EAN_GOLD tombant sous la categorie EAN EXCEPTIONNEL                                         FROM                                             (SELECT                                     --Dans ce select on pren l'ean gold deja transformer si necessaire et on verifie si c'est un EAN exceptionnel                                                    INNER_RS_2.*,                        --Dans le cas ou c'est un EAN exceptionnel, on fait une nouvelle transformation                                                    excep.cod_ean_type COD_EAN_TYPE,     --Prendre la valeur cod_ean_type de T_PAR_EAN_EXCEPTIONNEL                                                    CASE
                                                         WHEN excep.cod_ean_type IN (1,2)                                                          AND excep.nb_premiers_caracteres IS NOT NULL                                                          AND excep.nb_premiers_caracteres > 0                                                          AND IMG_STK.cod_pays = excep.cod_pays
                                                          AND ((SUBSTR(INNER_RS_2.cod_ean_mer,1,2) = excep.cod_ean_prefixe) OR (SUBSTR(INNER_RS_2.cod_ean_mer,1,3) = excep.cod_ean_prefixe))                                                    THEN SUBSTR(INNER_RS_2.COD_EAN_GLD_INNER, 1, excep.nb_premiers_caracteres)                                                         ELSE INNER_RS_2.COD_EAN_GLD_INNER
                                                     END COD_EAN_GLD
                                                FROM                                                    (SELECT                      -- Dans ce select on va dans un premier temps chercher L'EAN GOLD (COD_EAN_GLD) en faisant une transformation de sur L'EAN MER (COD_EAN_MER)                                                          INNER_RS.*,            -- on utilise ensuite COD_EAN_GLD tout juste transformer pour aller verifier sa presence dans GOLD, Cette requete nous retourne finalement tout les info de la table T_REF_MER_ARTEAN qui sont pr√©sent dans GOLD                                                          DECODE(                                                                 SUBSTR(CASE WHEN LENGTH(INNER_RS.COD_EAN_MER) < 13 THEN LPAD(INNER_RS.COD_EAN_MER,13,0) ELSE INNER_RS.COD_EAN_MER END, 1, 8), '00000000',   --  Exemple de la fonction DECODE :   IF substr(0000000012345, 1, 8) = '00000000' THEN SUBSTR(0000000012345, -5)  which is '12345'  ELSE  0000000012345                                                                 SUBSTR(CASE WHEN LENGTH(INNER_RS.COD_EAN_MER) < 13 THEN LPAD(INNER_RS.COD_EAN_MER,13,0) ELSE INNER_RS.COD_EAN_MER END,-5),                                                                 CASE WHEN LENGTH(INNER_RS.COD_EAN_MER) < 13 THEN LPAD(INNER_RS.COD_EAN_MER,13,0) ELSE INNER_RS.COD_EAN_MER END
                                                                 )  COD_EAN_GLD_INNER
                                                      FROM (                                                            SELECT                                                                  ART.*,                                                                  CASE WHEN LENGTH(ART.COD_EAN) < 13 then LPAD(ART.COD_EAN,13,0) ELSE ART.COD_EAN END COD_EAN_MER
                                                              FROM T_REF_MER_ARTEAN ART
                                                             WHERE ART.COD_ACTIF = 1                                                            ) INNER_RS
                                                    ) INNER_RS_2,                                                  T_PAR_EAN_EXCEPTIONNEL excep,                                                  T_WRK_IMG_STK IMG_STK
                                              WHERE IMG_STK.COD_PDV = INNER_RS_2.COD_PDV -- Jointure entre T_WRK_IMG_STK et T_REF_MER_ARTEAN sur le COD_PDV                                                AND IMG_STK.COD_CHRONO = INNER_RS_2.COD_CHRONO -- Jointure entre T_WRK_IMG_STK et T_REF_MER_ARTEAN sur le COD_CHRONO                                              ) INNER_RS_3,                                              T_RET_IMG_GLD_aRT_VV_BARCODE VV_BARCODE
                                       WHERE INNER_RS_3.COD_EAN_GLD =  VV_BARCODE.BARCODE
                                            )ARTEAN
                                 WHERE WRK_STK.COD_PDV = ARTEAN.COD_PDV
                                   AND WRK_STK.COD_CHRONO = ARTEAN.COD_CHRONO
                                   AND ARTEAN.COD_PDV = ARTSIGN.COD_PDV  -- La Jointure T_REF_MER_ARTEAN et T_WRK_IMG_STK Se Fait Deja Dans Le Select (Artean) En Haut                                   AND ARTEAN.COD_CHRONO = ARTSIGN.COD_CHRONO
                                   AND ARTSIGN.COD_ACTIF =1                                   AND ARTSIGN.COD_PDV = ARTARIFA.COD_PDV
                                   AND ARTSIGN.COD_ITM_PRIO = ARTARIFA.COD_ITM
                                   AND ARTARIFA.COD_ACTIF = 1                                   AND ARTARIFA.DAT_DEB_TARIF <= WRK_STK.DAT_MVT_STK
                                   AND NVL(ARTARIFA.DAT_FIN_TARIF, TO_DATE('31/12/9999', 'DD/MM/YYYY')) >= WRK_STK.DAT_MVT_STK
--                                   AND WRK_STK.IND_TRT = -1--                                   AND WRK_STK.COD_PDV IN ( SELECT TO_CHAR ( REGEXP_SUBSTR ( V_CODE_GROUP_CLOB,'[^,]+',1,LEVEL)) VALUE--                                                              FROM DUAL--                                                           CONNECT BY LEVEL <=  LENGTH ( V_CODE_GROUP_CLOB ) - LENGTH ( REPLACE ( V_CODE_GROUP_CLOB, ',' ) ) + 1--                                                           )                                )INNER_RS
                         WHERE INNER_RS.RN_PRIX =1                     )INNER_RS_2
                    WHERE INNER_RS_2.RN_EAN_FINAL =1         )WHERE   WRK.IND_TRT = -1  AND   WRK.COD_PDV IN ( SELECT TO_CHAR ( REGEXP_SUBSTR ( V_CODE_GROUP_CLOB,'[^,]+',1,LEVEL)) VALUE
                           FROM DUAL
                        CONNECT BY LEVEL <=  LENGTH ( V_CODE_GROUP_CLOB ) - LENGTH ( REPLACE ( V_CODE_GROUP_CLOB, ',' ) ) + 1                         );
